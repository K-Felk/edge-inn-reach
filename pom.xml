<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.4.4</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>org.folio</groupId>
  <artifactId>edge-inn-reach</artifactId>
  <name>edge-inn-reach</name>
  <version>1.0.0-SNAPSHOT</version>
  <description>FOLIO edge-inn-reach module (Spring based implementation)</description>
  <packaging>jar</packaging>

  <licenses>
    <license>
      <name>Apache License 2.0</name>
      <url>http://spdx.org/licenses/Apache-2.0</url>
    </license>
  </licenses>

  <properties>
    <java.version>11</java.version>
    <folio-spring-base.version>1.0.5</folio-spring-base.version>
    <openapi-generator.version>5.1.0</openapi-generator.version>
    <mapstruct.version>1.4.1.Final</mapstruct.version>
    <wiremock-version>2.27.2</wiremock-version>
    <json.version>20210307</json.version>
    <jackson.version>2.12.2</jackson.version>
    <junit-jupiter.version>5.7.0</junit-jupiter.version>
    <rest-assured.version>4.3.3</rest-assured.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Api definition files -->
    <i2nreach.yaml.file>
      ${project.basedir}/src/main/resources/swagger.api/i2nreach.yaml
    </i2nreach.yaml.file>

    <sonar.exclusions>
      org.folio.edge.EdgeInnReachApplication
    </sonar.exclusions>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit-jupiter.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <type>pom</type>
        <scope>import</scope>
        <version>${jackson.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-spring-base</artifactId>
      <version>${folio-spring-base.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>edge-common-spring</artifactId>
      <version>1.0.0-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>${json.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct-processor</artifactId>
      <version>${mapstruct.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Test dependencies. Lost of tests dependencies provided by spring-base. Here just exclude particular dependencies to use own -->
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${rest-assured.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock</artifactId>
      <version>${wiremock-version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-to-slf4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <layers>
            <enabled>true</enabled>
          </layers>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <release>11</release>
        </configuration>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
	      <!-- JUnit 5 requires Surefire version 2.22.0 or higher -->
        <version>2.22.2</version>
        <configuration>
          <argLine>@{argLine} -Duser.language=en -Duser.region=US</argLine>
          <!-- TODO: update to version 3.0.0 and remove useSystemClassLoader
               https://issues.folio.org/browse/FOLIO-1609
               https://issues.apache.org/jira/browse/SUREFIRE-1588
          -->
          <useSystemClassLoader>false</useSystemClassLoader>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>filter-descriptor-inputs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/descriptors</directory>
                  <include>*Descriptor*-template.json</include>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.coderplus.maven.plugins</groupId>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <version>1.0.1</version>
        <executions>
          <execution>
            <id>rename-descriptor-outputs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>rename</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <sourceFile>${project.build.directory}/ModuleDescriptor-template.json</sourceFile>
                  <destinationFile>${project.build.directory}/ModuleDescriptor.json</destinationFile>
                </fileSet>
                <fileSet>
                  <sourceFile>${project.build.directory}/DeploymentDescriptor-template.json</sourceFile>
                  <destinationFile>${project.build.directory}/DeploymentDescriptor.json</destinationFile>
                </fileSet>
              </fileSets>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
<!--
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>${openapi-generator.version}</version>
        <executions>
          <execution>
            <id>inn-reach</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${i2nreach.yaml.file}</inputSpec>
              <output>${project.build.directory}/generated-sources</output>
              <generatorName>spring</generatorName>
              <modelPackage>${project.groupId}.edge.i2nreach.domain.dto</modelPackage>
              <apiPackage>${project.groupId}.edge.i2nreach.rest.resource</apiPackage>
              <generateApis>true</generateApis>
              <generateApiTests>true</generateApiTests>
              <generateApiDocumentation>true</generateApiDocumentation>
              <generateModels>true</generateModels>
              <modelsToGenerate>error,errors,parameter,metadata,entityObject1,entityCollection1</modelsToGenerate>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>true</generateSupportingFiles>
              <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
              <generateModelDocumentation>true</generateModelDocumentation>
              <configOptions>
                <java8>true</java8>
                <dateLibrary>java</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
-->
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>folio-nexus</id>
      <name>FOLIO Maven repository</name>
      <url>https://repository.folio.org/repository/maven-folio</url>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>folio-nexus</id>
      <name>FOLIO Release Repository</name>
      <url>https://repository.folio.org/repository/maven-releases/</url>
      <uniqueVersion>false</uniqueVersion>
      <layout>default</layout>
    </repository>
    <snapshotRepository>
      <id>folio-nexus</id>
      <name>FOLIO Snapshot Repository</name>
      <uniqueVersion>true</uniqueVersion>
      <url>https://repository.folio.org/repository/maven-snapshots/</url>
      <layout>default</layout>
    </snapshotRepository>
  </distributionManagement>

  <scm>
    <url>https://github.com/folio-org/${project.artifactId}</url>
    <connection>scm:git:git://github.com/folio-org/${project.artifactId}.git</connection>
    <developerConnection>scm:git:git@github.com:folio-org/${project.artifactId}.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

</project>
